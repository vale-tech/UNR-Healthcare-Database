<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/18/2016 2:45:04 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="FROZEN-FORTRESS"
  DTS:CreatorName="Frozen-Fortress\Vale"
  DTS:DTSID="{B3B97E2E-AB35-4420-AF3C-AA82D068972F}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ProcessMDB"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="86"
  DTS:VersionGUID="{2F66F160-91D1-4810-8556-3DAE78C71F38}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E04F221A-2A5E-4797-907B-7E12EA4539D2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileYearFromDB">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{41A1219F-9828-4D37-A04E-774F521189E1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullFilePathFromDB">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A2BEEEA0-2E19-484F-9CD6-25FA96E7E877}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="mdbsToProcess">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Cleanup"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{496E978B-53FD-4E51-9950-7466600327E6}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Cleanup">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Cleanup\Delete Unused Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B2383B02-2215-4B8A-B524-0BBA2393A32D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete Unused Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A99FAEE5-C578-4ACD-9857-18D747CAC2A6}"
              SQLTask:SqlStatementSource="USE [HospitalCompareStage];&#xA;&#xA;IF OBJECT_ID('[dbo].[2009_HQI_FTNT]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2009_HQI_FTNT] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2009_HQI_FTNT' END;&#xA;IF OBJECT_ID('[dbo].[2009_HQI_PCTL_MSR_XWLK]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2009_HQI_PCTL_MSR_XWLK] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2009_HQI_PCTL_MSR_XWLK' END;&#xA;IF OBJECT_ID('[dbo].[2009_HQI_STATE_HCAHPS_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2009_HQI_STATE_HCAHPS_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2009_HQI_STATE_HCAHPS_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2009_HQI_STATE_MORTALITY_READM_SCRE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2009_HQI_STATE_MORTALITY_READM_SCRE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2009_HQI_STATE_MORTALITY_READM_SCRE' END;&#xA;IF OBJECT_ID('[dbo].[2009_HQI_STATE_MPV_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2009_HQI_STATE_MPV_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2009_HQI_STATE_MPV_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2009_HQI_STATE_MSR_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2009_HQI_STATE_MSR_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2009_HQI_STATE_MSR_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2009_HQI_US_NATIONAL_HCAHPS_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2009_HQI_US_NATIONAL_HCAHPS_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2009_HQI_US_NATIONAL_HCAHPS_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2009_HQI_US_NATIONAL_MORTALITY_READM_RATE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2009_HQI_US_NATIONAL_MORTALITY_READM_RATE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2009_HQI_US_NATIONAL_MORTALITY_READM_RATE' END;&#xA;IF OBJECT_ID('[dbo].[2009_HQI_US_NATIONAL_MPV_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2009_HQI_US_NATIONAL_MPV_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2009_HQI_US_NATIONAL_MPV_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2010_HQI_FTNT]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2010_HQI_FTNT] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2010_HQI_FTNT' END;&#xA;IF OBJECT_ID('[dbo].[2010_HQI_PCTL_MSR_XWLK]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2010_HQI_PCTL_MSR_XWLK] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2010_HQI_PCTL_MSR_XWLK' END;&#xA;IF OBJECT_ID('[dbo].[2010_HQI_STATE_HCAHPS_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2010_HQI_STATE_HCAHPS_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2010_HQI_STATE_HCAHPS_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2010_HQI_STATE_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2010_HQI_STATE_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2010_HQI_STATE_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2010_HQI_STATE_MORTALITY_READM_SCRE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2010_HQI_STATE_MORTALITY_READM_SCRE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2010_HQI_STATE_MORTALITY_READM_SCRE' END;&#xA;IF OBJECT_ID('[dbo].[2010_HQI_STATE_MPV_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2010_HQI_STATE_MPV_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2010_HQI_STATE_MPV_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2010_HQI_STATE_MSR_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2010_HQI_STATE_MSR_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2010_HQI_STATE_MSR_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2010_HQI_US_NATIONAL_HCAHPS_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2010_HQI_US_NATIONAL_HCAHPS_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2010_HQI_US_NATIONAL_HCAHPS_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2010_HQI_US_NATIONAL_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2010_HQI_US_NATIONAL_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2010_HQI_US_NATIONAL_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2010_HQI_US_NATIONAL_MORTALITY_READM_RATE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2010_HQI_US_NATIONAL_MORTALITY_READM_RATE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2010_HQI_US_NATIONAL_MORTALITY_READM_RATE' END;&#xA;IF OBJECT_ID('[dbo].[2010_HQI_US_NATIONAL_MPV_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2010_HQI_US_NATIONAL_MPV_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2010_HQI_US_NATIONAL_MPV_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2010_HQI_US_National_MSR_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2010_HQI_US_National_MSR_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2010_HQI_US_National_MSR_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_FTNT]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_FTNT] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_FTNT' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_PCTL_MSR_XWLK]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_PCTL_MSR_XWLK] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_PCTL_MSR_XWLK' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_STATE_HCAHPS_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_STATE_HCAHPS_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_STATE_HCAHPS_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_STATE_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_STATE_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_STATE_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_STATE_MORTALITY_READM_SCRE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_STATE_MORTALITY_READM_SCRE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_STATE_MORTALITY_READM_SCRE' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_STATE_MPV_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_STATE_MPV_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_STATE_MPV_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_STATE_MSR_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_STATE_MSR_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_STATE_MSR_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_US_NATIONAL_HCAHPS_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_US_NATIONAL_HCAHPS_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_US_NATIONAL_HCAHPS_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_US_NATIONAL_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_US_NATIONAL_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_US_NATIONAL_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_US_NATIONAL_MORTALITY_READM_RATE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_US_NATIONAL_MORTALITY_READM_RATE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_US_NATIONAL_MORTALITY_READM_RATE' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_US_NATIONAL_MPV_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_US_NATIONAL_MPV_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_US_NATIONAL_MPV_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_US_National_MSR_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_US_National_MSR_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_US_National_MSR_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_HOSP_AHRQ_NATIONAL]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_HOSP_AHRQ_NATIONAL] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_HOSP_AHRQ_NATIONAL' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_HOSP_AHRQ_STATE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_HOSP_AHRQ_STATE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_HOSP_AHRQ_STATE' END;&#xA;IF OBJECT_ID('[dbo].[2011_HQI_HOSP_HAC_NATIONAL]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_HQI_HOSP_HAC_NATIONAL] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_HQI_HOSP_HAC_NATIONAL' END;&#xA;IF OBJECT_ID('[dbo].[2011_Measure_Dates]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2011_Measure_Dates] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2011_Measure_Dates' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_FTNT]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_FTNT] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_FTNT' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_HOSP_ED]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_HOSP_ED] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_HOSP_ED' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_PCTL_MSR_XWLK]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_PCTL_MSR_XWLK] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_PCTL_MSR_XWLK' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_STATE_HCAHPS_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_STATE_HCAHPS_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_STATE_HCAHPS_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_STATE_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_STATE_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_STATE_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_STATE_MPV_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_STATE_MPV_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_STATE_MPV_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_STATE_MSR_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_STATE_MSR_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_STATE_MSR_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_US_NATIONAL_HCAHPS_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_US_NATIONAL_HCAHPS_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_US_NATIONAL_HCAHPS_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_US_NATIONAL_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_US_NATIONAL_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_US_NATIONAL_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_US_NATIONAL_MPV_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_US_NATIONAL_MPV_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_US_NATIONAL_MPV_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_US_National_MSR_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_US_National_MSR_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_US_National_MSR_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_HOSP_AHRQ_NATIONAL]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_HOSP_AHRQ_NATIONAL] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_HOSP_AHRQ_NATIONAL' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_HOSP_AHRQ_STATE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_HOSP_AHRQ_STATE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_HOSP_AHRQ_STATE' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_HOSP_ED_National]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_HOSP_ED_National] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_HOSP_ED_National' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_HOSP_ED_State]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_HOSP_ED_State] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_HOSP_ED_State' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_HOSP_HAC_NATIONAL]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_HOSP_HAC_NATIONAL] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_HOSP_HAC_NATIONAL' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_HOSP_HAI_STATE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_HOSP_HAI_STATE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_HOSP_HAI_STATE' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_HOSP_IMM_National]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_HOSP_IMM_National] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_HOSP_IMM_National' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_HOSP_IMM_State]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_HOSP_IMM_State] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_HOSP_IMM_State' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_STATE_MORTALITY]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_STATE_MORTALITY] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_STATE_MORTALITY' END;&#xA;IF OBJECT_ID('[dbo].[2012_HQI_US_NATIONAL_MORTALITY]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_HQI_US_NATIONAL_MORTALITY] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_HQI_US_NATIONAL_MORTALITY' END;&#xA;IF OBJECT_ID('[dbo].[2012_Measure_Dates]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2012_Measure_Dates] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2012_Measure_Dates' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_FTNT]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_FTNT] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_FTNT' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_HOSP_ED]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_HOSP_ED] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_HOSP_ED' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_HOSP_SPP_National]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_HOSP_SPP_National] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_HOSP_SPP_National' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_HOSP_SPP_State]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_HOSP_SPP_State] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_HOSP_SPP_State' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_PCTL_MSR_XWLK]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_PCTL_MSR_XWLK] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_PCTL_MSR_XWLK' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_STATE_HCAHPS_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_STATE_HCAHPS_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_STATE_HCAHPS_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_STATE_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_STATE_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_STATE_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_STATE_MORTALITY_READM_SCRE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_STATE_MORTALITY_READM_SCRE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_STATE_MORTALITY_READM_SCRE' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_STATE_MPV_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_STATE_MPV_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_STATE_MPV_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_STATE_MSR_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_STATE_MSR_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_STATE_MSR_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_US_NATIONAL_HCAHPS_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_US_NATIONAL_HCAHPS_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_US_NATIONAL_HCAHPS_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_US_NATIONAL_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_US_NATIONAL_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_US_NATIONAL_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_US_NATIONAL_MORTALITY_READM_RATE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_US_NATIONAL_MORTALITY_READM_RATE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_US_NATIONAL_MORTALITY_READM_RATE' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_US_NATIONAL_MPV_MSR]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_US_NATIONAL_MPV_MSR] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_US_NATIONAL_MPV_MSR' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_US_National_MSR_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_US_National_MSR_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_US_National_MSR_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_HOSP_AHRQ_NATIONAL]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_HOSP_AHRQ_NATIONAL] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_HOSP_AHRQ_NATIONAL' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_HOSP_AHRQ_STATE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_HOSP_AHRQ_STATE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_HOSP_AHRQ_STATE' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_HOSP_ED_National]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_HOSP_ED_National] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_HOSP_ED_National' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_HOSP_ED_State]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_HOSP_ED_State] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_HOSP_ED_State' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_HOSP_HAC_NATIONAL]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_HOSP_HAC_NATIONAL] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_HOSP_HAC_NATIONAL' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_HOSP_HAI_National]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_HOSP_HAI_National] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_HOSP_HAI_National' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_HOSP_HAI_STATE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_HOSP_HAI_STATE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_HOSP_HAI_STATE' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_HOSP_IMM_National]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_HOSP_IMM_National] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_HOSP_IMM_National' END;&#xA;IF OBJECT_ID('[dbo].[2013_HQI_HOSP_IMM_State]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_HQI_HOSP_IMM_State] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_HQI_HOSP_IMM_State' END;&#xA;IF OBJECT_ID('[dbo].[2013_Measure_Dates]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2013_Measure_Dates] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2013_Measure_Dates' END;&#xA;IF OBJECT_ID('[dbo].[2014_FY2013_Distribution_of_Net_Change_in_Base_Op_DRG_Payment_Amt]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_FY2013_Distribution_of_Net_Change_in_Base_Op_DRG_Payment_Amt] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_FY2013_Distribution_of_Net_Change_in_Base_Op_DRG_Payment_Amt' END;&#xA;IF OBJECT_ID('[dbo].[2014_FY2013_Net_Change_in_Base_Op_DRG_Payment_Amt]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_FY2013_Net_Change_in_Base_Op_DRG_Payment_Amt] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_FY2013_Net_Change_in_Base_Op_DRG_Payment_Amt' END;&#xA;IF OBJECT_ID('[dbo].[2014_FY2013_Percent_Change_in_Base_Operating_DRG_Payment_Amount]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_FY2013_Percent_Change_in_Base_Operating_DRG_Payment_Amount] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_FY2013_Percent_Change_in_Base_Operating_DRG_Payment_Amount' END;&#xA;IF OBJECT_ID('[dbo].[2014_FY2013_Value_Based_Incentive_Payment_Amount]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_FY2013_Value_Based_Incentive_Payment_Amount] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_FY2013_Value_Based_Incentive_Payment_Amount' END;&#xA;IF OBJECT_ID('[dbo].[2014_HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_NATIONAL]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_NATIONAL] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_NATIONAL' END;&#xA;IF OBJECT_ID('[dbo].[2014_HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_STATE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_STATE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_STATE' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_FTNT]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_FTNT] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_FTNT' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_NATIONAL_AMI_Payment]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_NATIONAL_AMI_Payment] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_NATIONAL_AMI_Payment' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_NATIONAL_HAI]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_NATIONAL_HAI] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_NATIONAL_HAI' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_NATIONAL_HCAHPS]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_NATIONAL_HCAHPS] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_NATIONAL_HCAHPS' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_NATIONAL_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_NATIONAL_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_NATIONAL_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_NATIONAL_MSPB]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_NATIONAL_MSPB] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_NATIONAL_MSPB' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_NATIONAL_MV]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_NATIONAL_MV] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_NATIONAL_MV' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_NATIONAL_ReadmCompDeath]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_NATIONAL_ReadmCompDeath] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_NATIONAL_ReadmCompDeath' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_NATIONAL_TimelyEffectiveCare]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_NATIONAL_TimelyEffectiveCare] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_NATIONAL_TimelyEffectiveCare' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_STATE_AMI_Payment]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_STATE_AMI_Payment] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_STATE_AMI_Payment' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_STATE_HAI]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_STATE_HAI] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_STATE_HAI' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_STATE_HCAHPS]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_STATE_HCAHPS] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_STATE_HCAHPS' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_STATE_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_STATE_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_STATE_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_STATE_MSPB]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_STATE_MSPB] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_STATE_MSPB' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_STATE_MV]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_STATE_MV] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_STATE_MV' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_STATE_ReadmCompDeath]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_STATE_ReadmCompDeath] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_STATE_ReadmCompDeath' END;&#xA;IF OBJECT_ID('[dbo].[2014_HQI_STATE_TimelyEffectiveCare]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_HQI_STATE_TimelyEffectiveCare] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_HQI_STATE_TimelyEffectiveCare' END;&#xA;IF OBJECT_ID('[dbo].[2014_Hvbp_quarters]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_Hvbp_quarters] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_Hvbp_quarters' END;&#xA;IF OBJECT_ID('[dbo].[2014_Measure_Dates]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2014_Measure_Dates] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2014_Measure_Dates' END;&#xA;IF OBJECT_ID('[dbo].[2015_ASC_Quality_National]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_ASC_Quality_National] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_ASC_Quality_National' END;&#xA;IF OBJECT_ID('[dbo].[2015_ASC_Quality_State]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_ASC_Quality_State] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_ASC_Quality_State' END;&#xA;IF OBJECT_ID('[dbo].[2015_FY2014_Distribution_of_Net_Change_in_Base_Op_DRG_Payment_Amt]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_FY2014_Distribution_of_Net_Change_in_Base_Op_DRG_Payment_Amt] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_FY2014_Distribution_of_Net_Change_in_Base_Op_DRG_Payment_Amt' END;&#xA;IF OBJECT_ID('[dbo].[2015_FY2014_Net_Change_in_Base_Op_DRG_Payment_Amt]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_FY2014_Net_Change_in_Base_Op_DRG_Payment_Amt] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_FY2014_Net_Change_in_Base_Op_DRG_Payment_Amt' END;&#xA;IF OBJECT_ID('[dbo].[2015_FY2014_Percent_Change_in_Medicare_Payments]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_FY2014_Percent_Change_in_Medicare_Payments] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_FY2014_Percent_Change_in_Medicare_Payments' END;&#xA;IF OBJECT_ID('[dbo].[2015_FY2014_Value_Based_Incentive_Payment_Amount]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_FY2014_Value_Based_Incentive_Payment_Amount] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_FY2014_Value_Based_Incentive_Payment_Amount' END;&#xA;IF OBJECT_ID('[dbo].[2015_HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_NATIONAL]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_NATIONAL] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_NATIONAL' END;&#xA;IF OBJECT_ID('[dbo].[2015_HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_STATE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_STATE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HOSPITAL_QUARTERLY_QUALITYMEASURE_IPFQR_STATE' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_FTNT]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_FTNT] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_FTNT' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_NATIONAL_Comp]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_NATIONAL_Comp] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_NATIONAL_Comp' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_NATIONAL_HAI]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_NATIONAL_HAI] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_NATIONAL_HAI' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_NATIONAL_HCAHPS]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_NATIONAL_HCAHPS] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_NATIONAL_HCAHPS' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_NATIONAL_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_NATIONAL_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_NATIONAL_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_NATIONAL_MSPB]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_NATIONAL_MSPB] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_NATIONAL_MSPB' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_NATIONAL_Payment]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_NATIONAL_Payment] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_NATIONAL_Payment' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_NATIONAL_ReadmDeath]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_NATIONAL_ReadmDeath] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_NATIONAL_ReadmDeath' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_NATIONAL_TimelyEffectiveCare]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_NATIONAL_TimelyEffectiveCare] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_NATIONAL_TimelyEffectiveCare' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_NATIONAL_Value of Care]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_NATIONAL_Value of Care] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_NATIONAL_Value of Care' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_STATE_Comp]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_STATE_Comp] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_STATE_Comp' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_STATE_HAI]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_STATE_HAI] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_STATE_HAI' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_STATE_HCAHPS]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_STATE_HCAHPS] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_STATE_HCAHPS' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_STATE_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_STATE_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_STATE_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_STATE_MSPB]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_STATE_MSPB] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_STATE_MSPB' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_STATE_Payment]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_STATE_Payment] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_STATE_Payment' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_STATE_ReadmDeath]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_STATE_ReadmDeath] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_STATE_ReadmDeath' END;&#xA;IF OBJECT_ID('[dbo].[2015_HQI_STATE_TimelyEffectiveCare]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_HQI_STATE_TimelyEffectiveCare] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_HQI_STATE_TimelyEffectiveCare' END;&#xA;IF OBJECT_ID('[dbo].[2015_Measure_Dates]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_Measure_Dates] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_Measure_Dates' END;&#xA;IF OBJECT_ID('[dbo].[2016_Ambulatory Surgical Measures-Facility]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_Ambulatory Surgical Measures-Facility] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_Ambulatory Surgical Measures-Facility' END;&#xA;IF OBJECT_ID('[dbo].[2016_Ambulatory Surgical Measures-National]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_Ambulatory Surgical Measures-National] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_Ambulatory Surgical Measures-National' END;&#xA;IF OBJECT_ID('[dbo].[2016_Ambulatory Surgical Measures-State]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_Ambulatory Surgical Measures-State] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_Ambulatory Surgical Measures-State' END;&#xA;IF OBJECT_ID('[dbo].[2016_FY2014_Distribution_of_Net_Change_in_Base_Op_DRG_Payment_Amt]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_FY2014_Distribution_of_Net_Change_in_Base_Op_DRG_Payment_Amt] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_FY2014_Distribution_of_Net_Change_in_Base_Op_DRG_Payment_Amt' END;&#xA;IF OBJECT_ID('[dbo].[2016_FY2014_Net_Change_in_Base_Op_DRG_Payment_Amt]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_FY2014_Net_Change_in_Base_Op_DRG_Payment_Amt] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_FY2014_Net_Change_in_Base_Op_DRG_Payment_Amt' END;&#xA;IF OBJECT_ID('[dbo].[2016_FY2014_Percent_Change_in_Medicare_Payments]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_FY2014_Percent_Change_in_Medicare_Payments] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_FY2014_Percent_Change_in_Medicare_Payments' END;&#xA;IF OBJECT_ID('[dbo].[2016_FY2014_Value_Based_Incentive_Payment_Amount]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_FY2014_Value_Based_Incentive_Payment_Amount] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_FY2014_Value_Based_Incentive_Payment_Amount' END;&#xA;IF OBJECT_ID('[dbo].[2016_HOSPITAL_QUARTERLY_IPFQR_MEASURES_NATIONAL]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HOSPITAL_QUARTERLY_IPFQR_MEASURES_NATIONAL] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HOSPITAL_QUARTERLY_IPFQR_MEASURES_NATIONAL' END;&#xA;IF OBJECT_ID('[dbo].[2016_HOSPITAL_QUARTERLY_IPFQR_MEASURES_STATE]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HOSPITAL_QUARTERLY_IPFQR_MEASURES_STATE] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HOSPITAL_QUARTERLY_IPFQR_MEASURES_STATE' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_FTNT]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_FTNT] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_FTNT' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_NATIONAL_Comp]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_NATIONAL_Comp] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_NATIONAL_Comp' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_NATIONAL_HAI]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_NATIONAL_HAI] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_NATIONAL_HAI' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_NATIONAL_HCAHPS]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_NATIONAL_HCAHPS] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_NATIONAL_HCAHPS' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_NATIONAL_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_NATIONAL_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_NATIONAL_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_NATIONAL_MSPB]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_NATIONAL_MSPB] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_NATIONAL_MSPB' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_NATIONAL_Payment]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_NATIONAL_Payment] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_NATIONAL_Payment' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_NATIONAL_ReadmDeath]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_NATIONAL_ReadmDeath] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_NATIONAL_ReadmDeath' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_NATIONAL_TimelyEffectiveCare]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_NATIONAL_TimelyEffectiveCare] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_NATIONAL_TimelyEffectiveCare' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_NATIONAL_Value of Care]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_NATIONAL_Value of Care] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_NATIONAL_Value of Care' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_STATE_Comp]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_STATE_Comp] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_STATE_Comp' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_STATE_HAI]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_STATE_HAI] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_STATE_HAI' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_STATE_HCAHPS]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_STATE_HCAHPS] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_STATE_HCAHPS' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_STATE_IMG_AVG]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_STATE_IMG_AVG] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_STATE_IMG_AVG' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_STATE_MSPB]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_STATE_MSPB] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_STATE_MSPB' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_STATE_Payment]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_STATE_Payment] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_STATE_Payment' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_STATE_ReadmDeath]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_STATE_ReadmDeath] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_STATE_ReadmDeath' END;&#xA;IF OBJECT_ID('[dbo].[2016_HQI_STATE_TimelyEffectiveCare]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_HQI_STATE_TimelyEffectiveCare] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_HQI_STATE_TimelyEffectiveCare' END;&#xA;IF OBJECT_ID('[dbo].[2016_Measure_Dates]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2016_Measure_Dates] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2016_Measure_Dates' END;&#xA;IF OBJECT_ID('[dbo].[2015_ASC_Quality_Facility]', 'U') IS NOT NULL BEGIN DROP TABLE [dbo].[2015_ASC_Quality_Facility] UPDATE [dbo].[MDBLoadLog] SET STATUS = 'Deleted' WHERE DestinationTableName='2015_ASC_Quality_Facility' END;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Cleanup\Fix column name in 2014 HVBP_HAI"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6EF33C36-2A83-4699-B52A-871FC0047BFE}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fix column name in 2014 HVBP_HAI"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A99FAEE5-C578-4ACD-9857-18D747CAC2A6}"
              SQLTask:SqlStatementSource="USE [HospitalCompareStage]&#xA;  EXEC sp_rename '[2014_Hvbp_hai_10_28_2014].[Scip_Inf_9_Measure Score]', 'Scip-Inf-9_Measure Score', 'COLUMN';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Cleanup\Fix column name in 2015 HVBP_Outcome"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FD98CEC0-64F8-4DE6-A55D-D04E680A6812}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fix column name in 2015 HVBP_Outcome"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A99FAEE5-C578-4ACD-9857-18D747CAC2A6}"
              SQLTask:SqlStatementSource="USE [HospitalCompareStage]&#xA;  EXEC sp_rename '[2015_Hvbp_outcome_11_17_2015].[HAI-1_Performance_Rate]', 'HAI-1 Performance Rate', 'COLUMN';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Cleanup\Fix column name in 2016 HVBP_Outcome 1"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{68dd0712-d89e-48a1-8207-04c7d7a760e1}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fix column name in 2016 HVBP_Outcome 1"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A99FAEE5-C578-4ACD-9857-18D747CAC2A6}"
              SQLTask:SqlStatementSource="USE [HospitalCompareStage]&#xA;  EXEC sp_rename '[2016_Hvbp_outcome_06_08_2016].[HAI-1_Performance_Rate]', 'HAI-1 Performance Rate', 'COLUMN';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Cleanup\Fix Data Issues in 2012 HAI"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B3FB4230-BFF2-4F35-B684-FF8D5D319403}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fix Data Issues in 2012 HAI"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A99FAEE5-C578-4ACD-9857-18D747CAC2A6}"
              SQLTask:SqlStatementSource=" DELETE FROM [HospitalCompareStage].[dbo].[2012_HQI_HOSP_HAI] WHERE prvdr_id IS NULL" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Cleanup\Fix Data Issues in 2013 Mortality Readmissions"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0F290C55-41D4-487D-A03F-974E02ED0908}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fix Data Issues in 2013 Mortality Readmissions"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A99FAEE5-C578-4ACD-9857-18D747CAC2A6}"
              SQLTask:SqlStatementSource="UPDATE i&#xA;SET i.Mortality_Readm_Compl_Rate = o.Mortality_Readm_Compl_Rate&#xA;FROM [HospitalCompareStage].[dbo].[2013_HQI_HOSP_MORTALITY_READM_XWLK] i&#xA;INNER JOIN [HospitalCompareStage].[dbo].[2013_HQI_HOSP_MORTALITY_READM_XWLK] o ON o.[Provider Number] = i.[Provider Number] AND o.Condition = 'Hip/Knee' AND o.[Measure Name] IS NULL&#xA;WHERE i.Condition = 'Hip/Knee' AND i.Mortality_Readm_Compl_Rate is null&#xA;&#xA;DELETE FROM [HospitalCompareStage].[dbo].[2013_HQI_HOSP_MORTALITY_READM_XWLK] WHERE Condition = 'Hip/Knee' AND [Measure Name] IS NULL" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Cleanup.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{93EC6383-CBF3-4344-BB83-B4DD2D1AA75C}"
          DTS:From="Package\Cleanup\Delete Unused Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Cleanup\Fix Data Issues in 2013 Mortality Readmissions" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Cleanup.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{9E2B1207-C95E-4C58-A25A-D336D5A75516}"
          DTS:From="Package\Cleanup\Fix Data Issues in 2013 Mortality Readmissions"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Cleanup\Fix Data Issues in 2012 HAI" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Cleanup.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{F666FBE9-80F8-44D8-9A47-D4CBFB8660A1}"
          DTS:From="Package\Cleanup\Fix Data Issues in 2012 HAI"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Cleanup\Fix column name in 2014 HVBP_HAI" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Cleanup.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{8EFE011F-8430-4516-AC2B-E1DD51BE0405}"
          DTS:From="Package\Cleanup\Fix column name in 2014 HVBP_HAI"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Cleanup\Fix column name in 2015 HVBP_Outcome" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Cleanup.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{4E0D269A-9118-4642-B958-CA3EEC3B92AD}"
          DTS:From="Package\Cleanup\Fix column name in 2015 HVBP_Outcome"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Cleanup\Fix column name in 2016 HVBP_Outcome 1" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Populate Stage"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{07FF0292-2DA4-4972-8177-B78D4060ED8B}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Populate Stage">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Populate Stage\ForeachFilePath"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{FEFB1E8E-7E4D-4A51-8F06-D2AA200FEA93}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="ForeachFilePath">
          <DTS:ForEachEnumerator
            DTS:CreationName="Microsoft.ForEachADOEnumerator"
            DTS:DTSID="{6E51E29B-A189-4B9B-A10E-239E302C3EED}"
            DTS:ObjectName="{6E51E29B-A189-4B9B-A10E-239E302C3EED}">
            <DTS:ObjectData>
              <FEEADO
                EnumType="EnumerateAllRows"
                VarName="User::mdbsToProcess" />
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Populate Stage\ForeachFilePath\CreateTableInsertData"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{C1752574-7D77-46C2-BD89-CBE839FCD5C6}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="CreateTableInsertData"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_8b9149b366e545239c4755edea691969"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::FileYearFromDB,User::FullFilePathFromDB,$Project::DBServer,$Project::DBUser,$Project::DBPass,$Project::MDBLoadLogTable">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8b9149b366e545239c4755edea691969.Properties.Settings.get_Default():ST_8b9149b366e545239c4755edea691969.Properties.Sett" +
    "ings")]

namespace ST_8b9149b366e545239c4755edea691969.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Data.OleDb;
#endregion

namespace ST_8b9149b366e545239c4755edea691969
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here
            string FullFilePath = Dts.Variables["User::FullFilePathFromDB"].Value.ToString(); 
            string FileYear = Dts.Variables["User::FileYearFromDB"].Value.ToString();
            string LoadLogTableName = Dts.Variables["$Project::MDBLoadLogTable"].Value.ToString();
            string SourceTableName = null;
            string DestinationTableName = null;
            string DropTableSQL = null;

            string TargetServer = Dts.Variables["$Project::DBServer"].Value.ToString(); 
            string TargetDB = "HospitalCompareStage"; 
            string TargetUser = Dts.Variables["$Project::DBUser"].Value.ToString(); 
            string TargetPassword = Dts.Variables["$Project::DBPass"].Value.ToString(); 

            string SourceConnString = ("Provider=Microsoft.Jet.OLEDB.4.0;" + "Data Source=" + FullFilePath);
            string TargetConnString = ("Data Source=" + TargetServer + "; Password=" + TargetPassword + ";User ID=" + TargetUser +";Initial Catalog=" + TargetDB + ";");

            int rowsAdded;


            OleDbConnection SourceConn = new OleDbConnection(SourceConnString);

            SourceConn.Open();
            DataTable DBTabsTables = SourceConn.GetSchema("Tables");
            SourceConn.Close();

            foreach (DataRow row in DBTabsTables.Rows)
            {
                SourceTableName = row["table_name"].ToString();

                if (!SourceTableName.StartsWith("MSys", System.StringComparison.CurrentCultureIgnoreCase)) //&& !SourceTableName.Contains("NATIONAL") && !SourceTableName.Contains("STATE")
                {
                    DestinationTableName = FileYear + "_" + SourceTableName.Replace("dbo_vw", "").Replace("vw", "");
                    DropTableSQL = "IF OBJECT_ID('dbo." + DestinationTableName + "') IS NOT NULL BEGIN DROP TABLE [dbo].[" + DestinationTableName + "] END; "; //build drop table if exists SQL
                    CreateTable(SourceConn, SourceTableName, TargetConnString, DropTableSQL, DestinationTableName);  //For the initial create, we want to use the source tableName
                    rowsAdded = BulkLoadTable(SourceConn, SourceTableName, TargetConnString, DestinationTableName); //For the initial bulk load, we want to use the source tableName
                    using (SqlConnection TargetConn = new SqlConnection(TargetConnString))
                    {
                        string InsertToLoadLog = "INSERT INTO [" + LoadLogTableName + "] (MDBYear, SourceTableName, DestinationTableName, NumberOfRows, Status) VALUES ('" + FileYear + "', '" + SourceTableName + "', '" + DestinationTableName + "', " + rowsAdded + ", 'Loaded')";
                        TargetConn.Open();
                        SqlCommand UpdateLoadLog = new SqlCommand(InsertToLoadLog, TargetConn);
                        UpdateLoadLog.ExecuteNonQuery();
                    }
                }


            }

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        public void CreateTable(OleDbConnection SourceConn, string SourceTableName, string TargetConnString, string DropTablesSQL, string DestinationTableName)
        {
            string[] restrictions = new string[4];

            restrictions[2] = SourceTableName; //restrict which table information is retruned by GetSchema
            string accessTableFieldName;
            DataRow myRow;

            SourceConn.Open();

            DataTable ColumnsDataTable = SourceConn.GetSchema("Columns", restrictions); //Fill DataTable with columns information
            SourceConn.Close();

            DataView dv = ColumnsDataTable.DefaultView;
            dv.Sort = "ordinal_position asc"; //Sort by column order

            DataTable SortedColumnsDataTable = dv.ToTable();

            string CreateTablesSQL = "CREATE TABLE [dbo].[" + DestinationTableName + "] (\n";

            //For every row in the table
            for (int i = 0; i < SortedColumnsDataTable.Rows.Count; i++)
            {
                //Get column name and type
                myRow = SortedColumnsDataTable.Rows[i];
                accessTableFieldName = "[" + myRow["column_name"] + "] ";

                switch (((OleDbType)myRow["data_type"]).ToString()) //Change OleDBType to SQL compliant datatypes
                {
                    case "Boolean":
                        accessTableFieldName += "bit";
                        break;
                    case "Currency":
                        accessTableFieldName += "money";
                        break;
                    case "Date":
                    case "DBDate":
                    case "DBTimeStamp":
                        accessTableFieldName += "datetime";
                        break;
                    case "VarWChar":
                    case "WChar":
                    case "VarChar":
                    case "Char":
                        accessTableFieldName += "varchar(" + myRow["character_maximum_length"] + ")";
                        break;
                    case "UnsignedTinyInt":
                        accessTableFieldName += "int";
                        break;
                    case "Double":
                        accessTableFieldName += "Float";
                        break;
                    default:
                        accessTableFieldName += ((OleDbType)myRow["data_type"]).ToString();
                        break;
                }

                accessTableFieldName = accessTableFieldName.Replace("(0)", "(max)"); //Fix "0" length strings which should be varchar(max) etc... 


                //Add coma or closing bracket
                if (i < SortedColumnsDataTable.Rows.Count - 1)
                {
                    accessTableFieldName = accessTableFieldName + ",\n";
                }
                else
                {
                    accessTableFieldName = accessTableFieldName + ")";
                }
                //Add new column to script
                CreateTablesSQL = CreateTablesSQL + accessTableFieldName;
            }
            //MessageBox.Show(CreateTablesSQL);

            using (SqlConnection TargetConn = new SqlConnection(TargetConnString))
            {
                TargetConn.Open();
                SqlCommand DropTables = new SqlCommand(DropTablesSQL, TargetConn);
                SqlCommand CreateTables = new SqlCommand(CreateTablesSQL, TargetConn);

                //TargetConn.Open();
                DropTables.ExecuteNonQuery();
                CreateTables.ExecuteNonQuery();
                //TargetConn.Close();
            }


        }

        public int BulkLoadTable(OleDbConnection SourceConn, string SourceTableName, string TargetConnString, string DestinationTableName) //use bcp to load data from source to target
        {
            int rowsAdded;

            DataTable sourceData = new DataTable();
            OleDbCommand SelectFromCmd = new OleDbCommand("SELECT * FROM [" + SourceTableName + "]", SourceConn);
            SourceConn.Open();
            OleDbDataAdapter adapter = new OleDbDataAdapter(SelectFromCmd);
            adapter.Fill(sourceData);

            using (SqlConnection TargetConn = new SqlConnection(TargetConnString))
            {
                TargetConn.Open();
                SqlBulkCopy sbc = new SqlBulkCopy(TargetConn);
                sbc.DestinationTableName = "[dbo].[" + DestinationTableName + "]";
                sbc.BatchSize = 50000;
                sbc.BulkCopyTimeout = 120;
                sbc.WriteToServer(sourceData);
                sbc.Close();
                rowsAdded = sourceData.Rows.Count;
            }

            SourceConn.Close();

            return rowsAdded;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_8b9149b366e545239c4755edea691969.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{107B013A-F107-45C4-847E-75F18C54C9AE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8b9149b366e545239c4755edea691969</RootNamespace>
    <AssemblyName>ST_8b9149b366e545239c4755edea691969</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_8b9149b366e545239c4755edea691969</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_8b9149b366e545239c4755edea691969</msb:DisplayName>
		<msb:ProjectId>{E3237B8E-6B9D-4BD5-9535-FB9FD2B3A489}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_8b9149b366e545239c4755edea691969.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8b9149b366e545239c4755edea691969")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8b9149b366e545239c4755edea691969")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8b9149b366e545239c4755edea691969.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8b9149b366e545239c4755edea691969.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8b9149b366e545239c4755edea691969.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8b9149b366e545239c4755edea691969.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8b9149b366e545239c4755edea691969.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_8b9149b366e545239c4755edea691969.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALClIFkAAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAAEkAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMA/AABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAGCAAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD0
PwAAAAAAAEgAAAACAAUAKCgAAOAWAAABAAAAAAAAAAg/AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgC3AgAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyMwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnJdAABw
bxIAAApvEwAACm8UAAAKDBQNFBMEFBMFAigQAAAKbxEAAApykQAAcG8SAAAKbxMAAApvFAAAChMG
crcAAHATBwIoEAAACm8RAAAKcuEAAHBvEgAACm8TAAAKbxQAAAoTCAIoEAAACm8RAAAKcgMBAHBv
EgAACm8TAAAKbxQAAAoTCXIlAQBwBigVAAAKEwofCY0jAAABJRZygQEAcKIlFxEGoiUYcpsBAHCi
JRkRCaIlGnKzAQBwoiUbEQiiJRxyxwEAcKIlHREHoiUecusBAHCiKBYAAAoTCxEKcxcAAAoTDREN
bxgAAAoRDXLvAQBwbxkAAAoRDW8aAAAKbxsAAApvHAAAChMOOCoBAAARDm8dAAAKdBMAAAFy/QEA
cG8eAAAKbxQAAAoNCXITAgBwF28fAAAKOv0AAAAHch0CAHAJciECAHByLwIAcG8gAAAKcjECAHBy
LwIAcG8gAAAKKCEAAAoTBBuNIwAAASUWcjcCAHCiJRcRBKIlGHJdAgBwoiUZEQSiJRpyrQIAcKIo
FgAAChMFAhENCRELEQURBCgCAAAGAhENCRELEQQoAwAABhMMEQtzIgAAChMPHwuNGQAAASUWcr0C
AHCiJRcIoiUYctkCAHCiJRkHoiUacoADAHCiJRsJoiUccoADAHCiJR0RBKIlHnKKAwBwoiUfCREM
jCgAAAGiJR8KcpIDAHCiKCMAAAoRD28YAAAKEQ9zJAAACm8lAAAKJt4MEQ8sBxEPbyYAAArcEQ5v
JwAACjrK/v//3hURDnUSAAABExARECwHERBvJgAACtwCKBAAAAoWbygAAAoqAEE0AAACAAAADAIA
AG8AAAB7AgAADAAAAAAAAAACAAAAWAEAAD0BAACVAgAAFQAAAAAAAAAbMAUAbwMAAAIAABEajSMA
AAEKBhgEogNvGAAACgNyqgMAcAZvKQAACgNvGgAACm8qAAAKJXK6AwBwbysAAApvLAAACg1y5AMA
cA4Fcg4EAHAoIQAAChMEFhMFOMkCAAAJbxsAAAoRBW8tAAAKDHIYBABwCHIcBABwbx4AAApyNAQA
cCguAAAKCwhyOgQAcG8eAAAKpRUAAAETBhIG/hYVAAABbxQAAAoTBxEHKAwAAAYTCBEIIHlzUjs1
TxEIIFYibxQ1HREIILFFHQg7RwEAABEIIFYibxQ7lAAAADjVAQAAEQggPeJ5KDsXAQAAEQgg8uX9
Njv4AAAAEQggeXNSOzuBAAAAOKwBAAARCCAoTEaONSkRCCCBw1lAO5MAAAARCCDaqBxPO7MAAAAR
CCAoTEaOO/MAAAA4egEAABEIIJdXlrIuVxEIIKOIw7suehEIIF9DlexAXAEAABEHck4EAHAoLwAA
CjrPAAAAOEYBAAARB3JeBABwKC8AAAo6ygAAADgwAQAAEQdycAQAcCgvAAAKOsUAAAA4GgEAABEH
cnoEAHAoLwAACjqvAAAAOAQBAAARB3KIBABwKC8AAAo6mQAAADjuAAAAEQdyoAQAcCgvAAAKOpEA
AAA42AAAABEHcrIEAHAoLwAACi1+OMUAAAARB3K+BABwKC8AAAotaziyAAAAEQdyzgQAcCgvAAAK
LVg4nwAAABEHctgEAHAoLwAACi11OIwAAAARB3L4BABwKC8AAAotcCt8B3IGBQBwKBUAAAoLOJEA
AAAHcg4FAHAoFQAACgs4gAAAAAdyGgUAcCgVAAAKCytyGo0ZAAABJRYHoiUXciwFAHCiJRgIcj4F
AHBvHgAACqIlGXJwBQBwoigjAAAKCytCB3J0BQBwKBUAAAoLKzQHcnwFAHAoFQAACgsrJgcIcjoE
AHBvHgAACqUVAAABEwYSBv4WFQAAAW8UAAAKKBUAAAoLB3KIBQBwcpAFAHBvIAAACgsRBQlvGwAA
Cm8wAAAKF1kvDgdynAUAcCgVAAAKCysMB3JwBQBwKBUAAAoLEQQHKBUAAAoTBBEFF1gTBREFCW8b
AAAKbzAAAAo/Jf3//wVzIgAAChMJEQlvGAAACg4EEQlzJAAAChMKEQQRCXMkAAAKEQpvJQAACiZv
JQAACibeDBEJLAcRCW8mAAAK3CoAARAAAAIANwMrYgMMAAAAABswBQCXAAAAAwAAEXMxAAAKC3Ki
BQBwBHLCBQBwKCEAAAoDczIAAAoDbxgAAApzMwAACgdvNAAACiYFcyIAAAoMCG8YAAAKCHM1AAAK
JXLGBQBwDgRywgUAcCghAAAKbzYAAAolIFDDAABvNwAACiUfeG84AAAKJQdvOQAACm86AAAKB28b
AAAKbzAAAAoK3goILAYIbyYAAArcA28aAAAKBioAARAAAAIANQBQhQAKAAAAAB4CKDsAAAoqHgIo
PAAACiqufgEAAAQtHnLWBQBw0AMAAAIoPQAACm8+AAAKcz8AAAqAAQAABH4BAAAEKhp+AgAABCoe
AoACAAAEKhp+AwAABCoeAihAAAAKKi5zCgAABoADAAAEKgAAEzACACwAAAAEAAARAiwnIMWdHIEK
FgsrFAIHb0EAAAoGYSCTAQABWgoHF1gLBwJvQgAACjLjBipCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAAC0BQAAI34AACAGAAAYCAAAI1N0cmluZ3MAAAAAOA4AAEgGAAAjVVMAgBQA
ABAAAAAjR1VJRAAAAJAUAABQAgAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAA
MQAAAAYAAAAGAAAADAAAAAsAAABCAAAAAgAAABEAAAAEAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAAB
AAAAAQAAAAAAxgQBAAAAAAAGAC8DOAYGAL4DOAYGAHsCJQYPAKwGAAAGAKgCWQUGABIDWQUGAPMC
WQUGAKUDWQUGAE8DWQUGAGgDWQUGAL8CWQUGANoC+gMKAIMDdQQKANEBdQQOAH0FngAGAP4FAQcO
AI0FbgcGAB4B/AQOANkHkgAOAOkAkgAOAJcBngAOAMYAbgcGAAMF/AQGAF4CJQYGAEwH/AQGAM8F
WAYGAL8FRAUSAC4CsAQSAI8CsAQSAAgCLwUGAEMCOAYKAJ4EdQQWAO4GdwEWABUBdwEGACcE/AQO
AIAFmwUOAGsFkgAOAO0BkgAGAK4F/AQGAAEA/AQOALwAmwUOAMAHkgAOALkAngAOAN8FngAOAOIF
mwUOAO4HbgcGAJwB/AQGACoB/AQGAOUHWQUAAAAAKwAAAAAAAQABAAEAEAAZBQcAOQABAAEAAAAQ
AF8GuwZlAAEABQAAARAA+Aa7BnkAAwAJAAABAAA0AAAAZQAEAAwAAwEAAC4HAABdAAQADQARAAgF
OQERAMEBPQERANkAQQEGBoAARQFWgB4HSAFWgKEBSAFQIAAAAACGAB8FBgABAEgjAAAAAIYAAQFM
AQEA1CYAAAAAhgDzAFYBBgCIJwAAAACGGBgGBgAKAJAnAAAAAIMYGAYGAAoAmCcAAAAAkwjLBV8B
CgDEJwAAAACTCKkBZAEKAMsnAAAAAJMItQFpAQoA0ycAAAAAlghTB28BCwDaJwAAAACGGBgGBgAL
AOInAAAAAJEYHgZ0AQsA8CcAAAAAkwAuBHgBCwAAAAEAJAUAAAIATgEAAAMAFAQAAAQAUwAAAAUA
YgEAAAEAJAUAAAIATgEAAAMAFAQAAAQAYgEAAAEA5gMAAAEAQwcJABgGAQARABgGBgAZABgGCgAp
ABgGEAAxABgGEAA5ABgGEABBABgGEABJABgGEABRABgGEABZABgGEABhABgGEABpABgGBgDBABgG
BgDpABgGFQD5ABgGBgBxACYHMwABAeoGOQAJAfMEPwARAdwDRgDJACUESgAZAUUHTgAZAUUHVAB5
ABgGEAAhARQFBgAhAYgAWgAhASACBgChADwHYAAxAQoGZgCBAIQHRgCZAPMEawAZAUsEcAAZAdEA
eAAZAUUHfgCJABgGEAAZAUUHhQCxABgGiwBJAfoHkgCRACYCBgCBALcHlgABAV8HAQAhAYgArgCh
AMkHtgBRAZoHEABRAQ0BvAApAfMEwQAZAUUHxwAZAQoIzgAxAZAHkgChABgGBgBZARgG3ABhARgG
4wBpAe4E6gBxARgG8ABxAV4BEABxAewDAQBxAaMHAQBxAfAF9gBxASACBgBxABgGBgDJABgGBgB5
ATwB/AB5AeEHBQHRABgGCwHxABgGBgAZARQHGAEZAUAEkgAIABQALwEIABgANAEpAHMAtAEuAAsA
jAEuABMAlQEuABsAtAEuACMAvQEuACsA5gEuADMA5gEuADsA5gEuAEMAvQEuAEsA7AEuAFMA5gEu
AFsAAwJDAGMANAFJAHMAtAFhAHsANAFjAGsANAGjAHsANAEbAJoA1AATAQMAAQAEAAMAAADPBX0B
AADJAYIBAABXB4cBAgAGAAMAAgAHAAUAAQAIAAUAAgAJAAcABIAAAAEAAADNGCBeAAAAAAAABwAA
AAQAAAAAAAAAAAAAAB0BsAAAAAAADQAAAAAAAAAAAAAAJgFWBAAAAAAEAAAAAAAAAAAAAAAdAZIA
AAAAAAQAAAAAAAAAAAAAAB0B/AQAAAAADQAAAAAAAAAAAAAAJgFhAAAAAAAAAAAAAQAAAGkGAAAG
AAIAAAAAAABJbnQzMgBTVF84YjkxNDliMzY2ZTU0NTIzOWM0NzU1ZWRlYTY5MTk2OQA8TW9kdWxl
PgA8UHJpdmF0ZUltcGxlbWVudGF0aW9uRGV0YWlscz4ARHJvcFRhYmxlc1NRTABNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBHZXRTY2hlbWEAU3lzdGVtLkRhdGEAU3lzdGVt
LkRhdGEuT2xlRGIAbXNjb3JsaWIAT2xlRGJDb21tYW5kAFNxbENvbW1hbmQAUmVwbGFjZQBkZWZh
dWx0SW5zdGFuY2UARGF0YVRhYmxlAEJ1bGtMb2FkVGFibGUAQ3JlYXRlVGFibGUAVG9UYWJsZQBW
YXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBT
b3VyY2VUYWJsZU5hbWUAc2V0X0Rlc3RpbmF0aW9uVGFibGVOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlJ1bnRpbWUAT2xlRGJUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
cmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBJbnRlcm5hbERhdGFD
b2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Nj
cmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50
aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAc2V0X0JhdGNoU2l6ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldENvbm5TdHJpbmcAVG9TdHJpbmcAQ29tcHV0
ZVN0cmluZ0hhc2gAZ2V0X0xlbmd0aABTdGFydHNXaXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9i
amVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF84YjkxNDliMzY2ZTU0NTIzOWM0NzU1
ZWRlYTY5MTk2OS5kbGwARmlsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBPcGVu
AFNjcmlwdE1haW4AU291cmNlQ29ubgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBPbGVEYkNvbm5lY3Rp
b24AU3FsQ29ubmVjdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0
dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAE9sZURiRGF0YUFkYXB0ZXIAV3JpdGVUb1NlcnZl
cgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3Rp
Y3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzhi
OTE0OWIzNjZlNTQ1MjM5YzQ3NTVlZGVhNjkxOTY5LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF84YjkxNDliMzY2ZTU0NTIzOWM0NzU1ZWRlYTY5MTk2OS5Q
cm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9D
aGFycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfUm93cwBDb25jYXQAT2JqZWN0
AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABnZXRfQ3Vy
cmVudABnZXRfQ291bnQAc2V0X1NvcnQAc2V0X0J1bGtDb3B5VGltZW91dABNb3ZlTmV4dABEYXRh
VmlldwBnZXRfRGVmYXVsdFZpZXcARGF0YVJvdwBnZXRfQXNzZW1ibHkAU3FsQnVsa0NvcHkARXhl
Y3V0ZU5vblF1ZXJ5AG9wX0VxdWFsaXR5AAAAADFVAHMAZQByADoAOgBGAHUAbABsAEYAaQBsAGUA
UABhAHQAaABGAHIAbwBtAEQAQgAAKVUAcwBlAHIAOgA6AEYAaQBsAGUAWQBlAGEAcgBGAHIAbwBt
AEQAQgAAMyQAUAByAG8AagBlAGMAdAA6ADoATQBEAEIATABvAGEAZABMAG8AZwBUAGEAYgBsAGUA
ACUkAFAAcgBvAGoAZQBjAHQAOgA6AEQAQgBTAGUAcgB2AGUAcgAAKUgAbwBzAHAAaQB0AGEAbABD
AG8AbQBwAGEAcgBlAFMAdABhAGcAZQAAISQAUAByAG8AagBlAGMAdAA6ADoARABCAFUAcwBlAHIA
ACEkAFAAcgBvAGoAZQBjAHQAOgA6AEQAQgBQAGEAcwBzAABbUAByAG8AdgBpAGQAZQByAD0ATQBp
AGMAcgBvAHMAbwBmAHQALgBKAGUAdAAuAE8ATABFAEQAQgAuADQALgAwADsARABhAHQAYQAgAFMA
bwB1AHIAYwBlAD0AABlEAGEAdABhACAAUwBvAHUAcgBjAGUAPQAAFzsAIABQAGEAcwBzAHcAbwBy
AGQAPQAAEzsAVQBzAGUAcgAgAEkARAA9AAAjOwBJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8A
ZwA9AAADOwAADVQAYQBiAGwAZQBzAAAVdABhAGIAbABlAF8AbgBhAG0AZQAACU0AUwB5AHMAAANf
AAANZABiAG8AXwB2AHcAAAEABXYAdwAAJUkARgAgAE8AQgBKAEUAQwBUAF8ASQBEACgAJwBkAGIA
bwAuAAFPJwApACAASQBTACAATgBPAFQAIABOAFUATABMACAAQgBFAEcASQBOACAARABSAE8AUAAg
AFQAQQBCAEwARQAgAFsAZABiAG8AXQAuAFsAAQ9dACAARQBOAEQAOwAgAAAbSQBOAFMARQBSAFQA
IABJAE4AVABPACAAWwAAgKVdACAAKABNAEQAQgBZAGUAYQByACwAIABTAG8AdQByAGMAZQBUAGEA
YgBsAGUATgBhAG0AZQAsACAARABlAHMAdABpAG4AYQB0AGkAbwBuAFQAYQBiAGwAZQBOAGEAbQBl
ACwAIABOAHUAbQBiAGUAcgBPAGYAUgBvAHcAcwAsACAAUwB0AGEAdAB1AHMAKQAgAFYAQQBMAFUA
RQBTACAAKAAnAAEJJwAsACAAJwABBycALAAgAAEXLAAgACcATABvAGEAZABlAGQAJwApAAEPQwBv
AGwAdQBtAG4AcwAAKW8AcgBkAGkAbgBhAGwAXwBwAG8AcwBpAHQAaQBvAG4AIABhAHMAYwAAKUMA
UgBFAEEAVABFACAAVABBAEIATABFACAAWwBkAGIAbwBdAC4AWwAACV0AIAAoAAoAAANbAAAXYwBv
AGwAdQBtAG4AXwBuAGEAbQBlAAAFXQAgAAATZABhAHQAYQBfAHQAeQBwAGUAAA9CAG8AbwBsAGUA
YQBuAAARQwB1AHIAcgBlAG4AYwB5AAAJRABhAHQAZQAADUQAQgBEAGEAdABlAAAXRABCAFQAaQBt
AGUAUwB0AGEAbQBwAAARVgBhAHIAVwBDAGgAYQByAAALVwBDAGgAYQByAAAPVgBhAHIAQwBoAGEA
cgAACUMAaABhAHIAAB9VAG4AcwBpAGcAbgBlAGQAVABpAG4AeQBJAG4AdAAADUQAbwB1AGIAbABl
AAAHYgBpAHQAAAttAG8AbgBlAHkAABFkAGEAdABlAHQAaQBtAGUAABF2AGEAcgBjAGgAYQByACgA
ADFjAGgAYQByAGEAYwB0AGUAcgBfAG0AYQB4AGkAbQB1AG0AXwBsAGUAbgBnAHQAaAAAAykAAAdp
AG4AdAAAC0YAbABvAGEAdAAABygAMAApAAALKABtAGEAeAApAAAFLAAKAAAfUwBFAEwARQBDAFQA
IAAqACAARgBSAE8ATQAgAFsAAANdAAAPWwBkAGIAbwBdAC4AWwAAcVMAVABfADgAYgA5ADEANAA5
AGIAMwA2ADYAZQA1ADQANQAyADMAOQBjADQANwA1ADUAZQBkAGUAYQA2ADkAMQA5ADYAOQAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAtCSJFvqthUWDXmu4OvqmpAAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERcRcHEQ4ODg4ODg4ODg4ODggSPRJBEkUSSQUgABKAgQUg
ABKAhQYgARKAiRwDIAAcAyAADgUAAg4ODgUAAQ4dDgUgARJRDgUgABKAlQQgABJBBCABHA4HIAIC
DhGAnQUgAg4ODgYAAw4ODg4FAAEOHRwGIAIBDhJFAyAACAMgAAITBwsdDg4STRJRDggRVQ4JEkUS
WQcgAhJRDh0OBSAAEoCpBCAAElEFIAESTQgGAAMOHBwcBQACAg4OBwcDCBJREkUGIAIBDhI9BiAB
ARKArQUgAQgSUQUgAQESRQUgAQESUQgAARKAvRGAwQUgABKAxQcgAgEOEoDFBAcCCQgEIAEDCAi3
elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJpAwYSbQMGEhACBggDBhEYCSAFARI9Dg4ODggg
BAgSPQ4ODgQAABJpBAAAEm0FAAEBEm0EAAASEAMAAAEEAAEJDgQIABJpBAgAEm0ECAASEAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOGI5MTQ5
YjM2NmU1NDUyMzljNDc1NWVkZWE2OTE5NjkAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNgAA
SQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIu
TkVUIEZyYW1ld29yayA0LjUAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA6D8AAAAAAAAAAAAAAkAAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAPQ/AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAgXs0YAAABACBezRg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADgAYgA5ADEANAA5AGIAMwA2ADYAZQA1ADQANQAyADMAOQBjADQANwA1ADUAZQBkAGUAYQA2ADkA
MQA5ADYAOQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADMANAA5
AC4AMgA0ADAAOQA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADgA
YgA5ADEANAA5AGIAMwA2ADYAZQA1ADQANQAyADMAOQBjADQANwA1ADUAZQBkAGUAYQA2ADkAMQA5
ADYAOQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA2AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8AOABiADkAMQA0ADkAYgAzADYANgBlADUANAA1ADIAMwA5AGMANAA3ADUANQBlAGQAZQBh
ADYAOQAxADkANgA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfADgAYgA5ADEANAA5AGIAMwA2ADYAZQA1ADQANQAyADMAOQBjADQANwA1ADUAZQBkAGUAYQA2
ADkAMQA5ADYAOQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NgAzADQAOQAuADIANAAwADkANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgAzADQAOQAuADIANAAwADkANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAAUMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{032190FF-9035-4516-9C30-6CB6F219E81A}"
              DTS:ObjectName="{032190FF-9035-4516-9C30-6CB6F219E81A}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::FileYearFromDB" />
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{DDECF46A-5AC8-41C2-808E-F85FB12A390E}"
              DTS:ObjectName="{DDECF46A-5AC8-41C2-808E-F85FB12A390E}"
              DTS:ValueIndex="1"
              DTS:VariableName="User::FullFilePathFromDB" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Populate Stage\GetFilePathsFromCSV"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{89F3C94C-918D-4156-94A8-E6C686E63B10}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="GetFilePathsFromCSV"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="{126EBAFA-E281-4DF9-AE8F-FFD58B090A4B}:external"
                      connectionManagerRefId="Project.ConnectionManagers[MDBPaths]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Output].Columns[MDBYear]"
                          codePage="65001"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[MDBYear]"
                          length="50"
                          lineageId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Output].Columns[MDBYear]"
                          name="MDBYear"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Output].Columns[MDBPath]"
                          codePage="65001"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[MDBPath]"
                          length="500"
                          lineageId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Output].Columns[MDBPath]"
                          name="MDBPath"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[MDBYear]"
                          codePage="65001"
                          dataType="str"
                          length="50"
                          name="MDBYear" />
                        <externalMetadataColumn
                          refId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[MDBPath]"
                          codePage="65001"
                          dataType="str"
                          length="500"
                          name="MDBPath" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="65001"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Populate Stage\GetFilePathsFromCSV\Recordset Destination"
                  componentClassID="Microsoft.RecordsetDestination"
                  contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
                  name="Recordset Destination">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the recordset."
                      name="VariableName">User::mdbsToProcess</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Populate Stage\GetFilePathsFromCSV\Recordset Destination.Inputs[Recordset Destination Input]"
                      hasSideEffects="true"
                      name="Recordset Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Populate Stage\GetFilePathsFromCSV\Recordset Destination.Inputs[Recordset Destination Input].Columns[MDBYear]"
                          cachedCodepage="65001"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="MDBYear"
                          lineageId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Output].Columns[MDBYear]" />
                        <inputColumn
                          refId="Package\Populate Stage\GetFilePathsFromCSV\Recordset Destination.Inputs[Recordset Destination Input].Columns[MDBPath]"
                          cachedCodepage="65001"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="MDBPath"
                          lineageId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Output].Columns[MDBPath]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Populate Stage\GetFilePathsFromCSV.Paths[Flat File Source Output]"
                  endId="Package\Populate Stage\GetFilePathsFromCSV\Recordset Destination.Inputs[Recordset Destination Input]"
                  name="Flat File Source Output"
                  startId="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source.Outputs[Flat File Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Populate Stage.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{87E7C577-5B03-4BE6-B367-4489FCB04B29}"
          DTS:From="Package\Populate Stage\GetFilePathsFromCSV"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Populate Stage\ForeachFilePath" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Setup Stage"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{379B20EF-F79D-4EBB-B6DC-FA8A585A37E7}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Setup Stage">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Setup Stage\Create Load Log Table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{E5FBEFB3-B1F0-4616-AFE2-B89F7AD86AFD}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Load Log Table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A99FAEE5-C578-4ACD-9857-18D747CAC2A6}"
              SQLTask:SqlStatementSource="USE [HospitalCompareStage];&#xA;&#xA;IF OBJECT_ID('[MDBLoadLog]', 'U') IS NOT NULL&#xA;DROP TABLE [MDBLoadLog];&#xA;&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;CREATE TABLE [MDBLoadLog](&#xA;&#x9;[LoadLogTableID] [int] IDENTITY(1,1) NOT NULL,&#xA;&#x9;[MDBYear] [smallint] NOT NULL,&#xA;&#x9;[SourceTableName] [varchar](200) NOT NULL,&#xA;&#x9;[DestinationTableName] [varchar](200) NOT NULL,&#xA;&#x9;[NumberOfRows] int NOT NULL,&#xA;&#x9;[Status] [varchar](200)&#xA; CONSTRAINT [PK_dbo.MDBLoadLog] PRIMARY KEY CLUSTERED &#xA;(&#xA;&#x9;[LoadLogTableID] ASC&#xA;)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]&#xA;) ON [PRIMARY]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Setup Stage\Create Stage Database"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0F304D9D-C0F0-43F3-A4BB-C613AA13AF06}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Stage Database"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{A99FAEE5-C578-4ACD-9857-18D747CAC2A6}"
              SQLTask:SqlStatementSource="IF DB_ID('HospitalCompareStage') IS NOT NULL&#xA;&#x9;DROP DATABASE [HospitalCompareStage]&#xA;GO&#xA;&#xA;CREATE DATABASE HospitalCompareStage&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Setup Stage.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{88847ED2-81D1-453F-B5DC-BB64E6DA836E}"
          DTS:From="Package\Setup Stage\Create Stage Database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Setup Stage\Create Load Log Table" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{AAE7C139-8455-495E-A4E3-C276BAAEF3E1}"
      DTS:From="Package\Populate Stage"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Cleanup" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{2A0535E7-D30B-481D-BD8F-B2BBD948F6D7}"
      DTS:From="Package\Setup Stage"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Populate Stage" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="183,42"
          Id="Package\Cleanup\Delete Unused Tables"
          TopLeft="5.5,5" />
        <EdgeLayout
          Id="Package\Cleanup.PrecedenceConstraints[Constraint 3]"
          TopLeft="97.0000000000002,47.0000000000001">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.4999999999998,28.9999999999999"
              Start="0,0"
              End="65.4999999999998,21.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.4999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.4999999999999"
                    Point2="0,14.4999999999999"
                    Point3="4,14.4999999999999" />
                  <mssgle:LineSegment
                    End="61.4999999999998,14.4999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="61.4999999999998,14.4999999999999"
                    Point2="65.4999999999998,14.4999999999999"
                    Point3="65.4999999999998,18.4999999999999" />
                  <mssgle:LineSegment
                    End="65.4999999999998,21.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="252,42"
          Id="Package\Cleanup\Fix column name in 2014 HVBP_HAI"
          TopLeft="463.5,93.9999999999999" />
        <EdgeLayout
          Id="Package\Cleanup.PrecedenceConstraints[Constraint 5]"
          TopLeft="202.5,164">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="387,-28"
              Start="0,0"
              End="387,-20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-7.32584269662925" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-7.32584269662925"
                    Point2="0,-11.3258426966293"
                    Point3="4,-11.3258426966293" />
                  <mssgle:LineSegment
                    End="383,-11.3258426966293" />
                  <mssgle:CubicBezierSegment
                    Point1="383,-11.3258426966293"
                    Point2="387,-11.3258426966293"
                    Point3="387,-15.3258426966293" />
                  <mssgle:LineSegment
                    End="387,-20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Cleanup.PrecedenceConstraints[Constraint 6]"
          TopLeft="628.583333333333,136">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="165,42"
          Id="Package\Cleanup\Fix column name in 2015 HVBP_Outcome"
          TopLeft="544.5,181" />
        <EdgeLayout
          Id="Package\Cleanup.PrecedenceConstraints[Constraint 7]"
          TopLeft="627,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.99999999999977,43"
              Start="0,0"
              End="8.99999999999977,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.5"
                    Point2="0,21.5"
                    Point3="4,21.5" />
                  <mssgle:LineSegment
                    End="4.99999999999977,21.5" />
                  <mssgle:CubicBezierSegment
                    Point1="4.99999999999977,21.5"
                    Point2="8.99999999999977,21.5"
                    Point3="8.99999999999977,25.5" />
                  <mssgle:LineSegment
                    End="8.99999999999977,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="165,42"
          Id="Package\Cleanup\Fix column name in 2016 HVBP_Outcome 1"
          TopLeft="553.5,266" />
        <NodeLayout
          Size="212,42"
          Id="Package\Cleanup\Fix Data Issues in 2012 HAI"
          TopLeft="62.5,164" />
        <EdgeLayout
          Id="Package\Cleanup.PrecedenceConstraints[Constraint 4]"
          TopLeft="165.5,118">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.9999999999999"
              Start="0,0"
              End="0,38.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="302,42"
          Id="Package\Cleanup\Fix Data Issues in 2013 Mortality Readmissions"
          TopLeft="11.5,76" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="723,363"
          Size="723,406"
          Id="Package\Cleanup"
          TopLeft="985,136.666666666667" />
        <NodeLayout
          Size="187,42"
          Id="Package\Populate Stage\ForeachFilePath\CreateTableInsertData"
          TopLeft="63,23" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="318,102"
          Size="318,145"
          Id="Package\Populate Stage\ForeachFilePath"
          TopLeft="9.5,140.333333333333" />
        <NodeLayout
          Size="182,42"
          Id="Package\Populate Stage\GetFilePathsFromCSV"
          TopLeft="78,16" />
        <EdgeLayout
          Id="Package\Populate Stage.PrecedenceConstraints[Constraint]"
          TopLeft="168.75,58">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,82.3333333333333"
              Start="0,0"
              End="0,74.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,74.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="328,416"
          Size="328,459"
          Id="Package\Populate Stage"
          TopLeft="548.333333333333,79.3333333333334" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="876.333333333333,308.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="108.666666666667,30.8333333333333"
              Start="0,0"
              End="101.166666666667,30.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="50.3333333333335,0" />
                  <mssgle:CubicBezierSegment
                    Point1="50.3333333333335,0"
                    Point2="54.3333333333335,0"
                    Point3="54.3333333333335,4" />
                  <mssgle:LineSegment
                    End="54.3333333333335,26.8333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="54.3333333333335,26.8333333333333"
                    Point2="54.3333333333335,30.8333333333333"
                    Point3="58.3333333333335,30.8333333333333" />
                  <mssgle:LineSegment
                    End="101.166666666667,30.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="189,42"
          Id="Package\Setup Stage\Create Stage Database"
          TopLeft="22,26" />
        <NodeLayout
          Size="187,42"
          Id="Package\Setup Stage\Create Load Log Table"
          TopLeft="25,116" />
        <EdgeLayout
          Id="Package\Setup Stage.PrecedenceConstraints[Constraint]"
          TopLeft="117.5,68">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="255,234"
          Size="255,277"
          Id="Package\Setup Stage"
          TopLeft="149,50" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="404,188.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="144.333333333333,120.333333333333"
              Start="0,0"
              End="136.833333333333,120.333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="68.1666666666666,0" />
                  <mssgle:CubicBezierSegment
                    Point1="68.1666666666666,0"
                    Point2="72.1666666666666,0"
                    Point3="72.1666666666666,4" />
                  <mssgle:LineSegment
                    End="72.1666666666666,116.333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="72.1666666666666,116.333333333333"
                    Point2="72.1666666666666,120.333333333333"
                    Point3="76.1666666666666,120.333333333333" />
                  <mssgle:LineSegment
                    End="136.833333333333,120.333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Populate Stage\GetFilePathsFromCSV">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="153,42"
          Id="Package\Populate Stage\GetFilePathsFromCSV\Flat File Source"
          TopLeft="171,76" />
        <NodeLayout
          Size="184,42"
          Id="Package\Populate Stage\GetFilePathsFromCSV\Recordset Destination"
          TopLeft="157,187" />
        <EdgeLayout
          Id="Package\Populate Stage\GetFilePathsFromCSV.Paths[Flat File Source Output]"
          TopLeft="248.25,118">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,69"
              Start="0,0"
              End="0,61.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,61.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>